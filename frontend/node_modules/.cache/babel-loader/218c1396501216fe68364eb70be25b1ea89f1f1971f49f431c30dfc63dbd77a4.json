{"ast":null,"code":"import{createContext,useContext,useState,useEffect}from\"react\";import{getCookie}from\"../utils/cookies\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();const API_BASE_URL=\"https://www.emberlight.karura.cat\";export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{fetch(`${API_BASE_URL}/auth/csrf/`,{credentials:'include'});},[]);const fetchUser=async()=>{try{const res=await fetch(`${API_BASE_URL}/auth/me/`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\",'X-CSRFToken':getCookie('csrftoken')},credentials:\"include\"});if(res.ok){const userData=await res.json();setUser({id:userData.id,username:userData.username,email:userData.email});return true;}setUser(null);return false;}catch(err){setUser(null);return false;}finally{setLoading(false);}};useEffect(()=>{fetchUser();},[]);const login=async _ref2=>{let{username,password}=_ref2;const response=await fetch(`${API_BASE_URL}/auth/login/`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\",'X-CSRFToken':getCookie('csrftoken')},credentials:\"include\",body:JSON.stringify({username,password})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||\"Invalid username or password.\");}const success=await fetchUser();if(!success)throw new Error(\"Session verification failed\");};const logout=async()=>{await fetch(`${API_BASE_URL}/auth/logout/`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\",'X-CSRFToken':getCookie('csrftoken')},credentials:\"include\"});setUser(null);};const register=async _ref3=>{let{username,email,password}=_ref3;const response=await fetch(`${API_BASE_URL}/auth/register/`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"X-CSRFToken\":getCookie(\"csrftoken\")},credentials:\"include\",body:JSON.stringify({username,email,password})});const responseData=await response.json();if(!response.ok){const error=new Error(responseData.errors?\"Validation error\":\"Registration failed\");error.response={data:responseData};throw error;}return responseData;};const updateUser=async _ref4=>{let{username,email}=_ref4;try{const response=await fetch(`${API_BASE_URL}/auth/users/${user.id}/update/`,{method:'PUT',headers:{\"Content-Type\":\"application/json\",'X-CSRFToken':getCookie('csrftoken')},credentials:\"include\",body:JSON.stringify({username,email})});const responseData=await response.json();if(!response.ok){const errorMsg=responseData.errors?Object.values(responseData.errors).join('\\n'):responseData.error||\"Update failed\";throw new Error(errorMsg);}setUser(prev=>({...prev,...responseData}));return true;}catch(error){console.error('Update error:',error);throw error;}};const deleteUserData=async()=>{try{const response=await fetch(`${API_BASE_URL}/auth/users/delete-data/`,{method:'POST',headers:{\"Content-Type\":\"application/json\",'X-CSRFToken':getCookie('csrftoken')},credentials:\"include\"});if(!response.ok){throw new Error('Failed to delete user data');}return true;}catch(error){console.error('Data deletion error:',error);throw error;}};// NUEVO: Eliminar cuenta de usuario\nconst deleteUser=async()=>{try{const response=await fetch(`https://www.emberlight.karura.cat/auth/users/${user.id}/delete/`,{method:'DELETE',headers:{\"Content-Type\":\"application/json\",'X-CSRFToken':getCookie('csrftoken')},credentials:\"include\"});if(!response.ok){throw new Error('Failed to delete user account');}setUser(null);return true;}catch(error){console.error('Account deletion error:',error);throw error;}};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout,register,updateUser,deleteUserData,deleteUser,// <-- Añadido aquí\nloading},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["createContext","useContext","useState","useEffect","getCookie","jsx","_jsx","AuthContext","API_BASE_URL","AuthProvider","_ref","children","user","setUser","loading","setLoading","fetch","credentials","fetchUser","res","method","headers","ok","userData","json","id","username","email","err","login","_ref2","password","response","body","JSON","stringify","errorData","Error","error","success","logout","register","_ref3","responseData","errors","data","updateUser","_ref4","errorMsg","Object","values","join","prev","console","deleteUserData","deleteUser","Provider","value","useAuth"],"sources":["/home/ubuntu/EmberLight_Projecte2/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\nimport { getCookie } from \"../utils/cookies\";\n\nconst AuthContext = createContext();\nconst API_BASE_URL = \"https://www.emberlight.karura.cat\";\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(`${API_BASE_URL}/auth/csrf/`, {\n      credentials: 'include'\n    });\n  }, []);\n\n  const fetchUser = async () => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/auth/me/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'X-CSRFToken': getCookie('csrftoken'),\n        },\n        credentials: \"include\",\n      });\n      if (res.ok) {\n        const userData = await res.json();\n        setUser({\n          id: userData.id,\n          username: userData.username,\n          email: userData.email,\n        });\n        return true;\n      }\n      setUser(null);\n      return false;\n    } catch (err) {\n      setUser(null);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  const login = async ({ username, password }) => {\n    const response = await fetch(`${API_BASE_URL}/auth/login/`, {\n      method: \"POST\",\n      headers: { \n        \"Content-Type\": \"application/json\",\n        'X-CSRFToken': getCookie('csrftoken'),\n      },\n      credentials: \"include\",\n      body: JSON.stringify({ username, password }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || \"Invalid username or password.\");\n    }\n\n    const success = await fetchUser();\n    if (!success) throw new Error(\"Session verification failed\");\n  };\n\n  const logout = async () => {\n    await fetch(`${API_BASE_URL}/auth/logout/`, {\n      method: \"POST\",\n      headers: { \n        \"Content-Type\": \"application/json\",\n        'X-CSRFToken': getCookie('csrftoken'),\n      },\n      credentials: \"include\",\n    });\n    setUser(null);\n  };\n\n  const register = async ({ username, email, password }) => {\n    const response = await fetch(`${API_BASE_URL}/auth/register/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCookie(\"csrftoken\"),\n      },\n      credentials: \"include\",\n      body: JSON.stringify({ username, email, password }),\n    });\n\n    const responseData = await response.json();\n    if (!response.ok) {\n      const error = new Error(responseData.errors ? \"Validation error\" : \"Registration failed\");\n      error.response = { data: responseData };\n      throw error;\n    }\n    return responseData;\n  };\n\n  const updateUser = async ({ username, email }) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/users/${user.id}/update/`, {\n        method: 'PUT',\n        headers: { \n          \"Content-Type\": \"application/json\",\n          'X-CSRFToken': getCookie('csrftoken'),\n        },\n        credentials: \"include\",\n        body: JSON.stringify({ username, email }),\n      });\n\n      const responseData = await response.json();\n\n      if (!response.ok) {\n        const errorMsg = responseData.errors \n          ? Object.values(responseData.errors).join('\\n')\n          : responseData.error || \"Update failed\";\n        throw new Error(errorMsg);\n      }\n\n      setUser(prev => ({ ...prev, ...responseData }));\n      return true;\n    } catch (error) {\n      console.error('Update error:', error);\n      throw error;\n    }\n  };\n\n  const deleteUserData = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/users/delete-data/`, {\n        method: 'POST',\n        headers: { \n          \"Content-Type\": \"application/json\",\n          'X-CSRFToken': getCookie('csrftoken'),\n        },\n        credentials: \"include\",\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete user data');\n      }\n      return true;\n    } catch (error) {\n      console.error('Data deletion error:', error);\n      throw error;\n    }\n  };\n\n  // NUEVO: Eliminar cuenta de usuario\n  const deleteUser = async () => {\n    try {\n      const response = await fetch(`https://www.emberlight.karura.cat/auth/users/${user.id}/delete/`, {\n        method: 'DELETE',\n        headers: { \n          \"Content-Type\": \"application/json\",\n          'X-CSRFToken': getCookie('csrftoken'),\n        },\n        credentials: \"include\",\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete user account');\n      }\n      setUser(null);\n      return true;\n    } catch (error) {\n      console.error('Account deletion error:', error);\n      throw error;\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{\n      user,\n      login,\n      logout,\n      register,\n      updateUser,\n      deleteUserData,\n      deleteUser, // <-- Añadido aquí\n      loading\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}